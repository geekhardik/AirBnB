<!DOCTYPE html>
<html>
<head>
  <title>gmaps.js &mdash; the easiest way to use Google Maps</title>
  <script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
  <script type="text/javascript" src="js/gmaps.js"></script>
  <script type="text/javascript" src="js/prettify.js"></script>
  <link href='//fonts.googleapis.com/css?family=Convergence|Bitter|Droid+Sans|Ubuntu+Mono' rel='stylesheet' type='text/css' />
  <link href='css/style.css' rel='stylesheet' type='text/css' />
  <link href='css/prettify.css' rel='stylesheet' type='text/css' />
  <link href='css/example.css' rel='stylesheet' type='text/css' />
  <% include ./head %>
  
  <!--  content: '<div class="dialogbox"><div class="body"><div class="tip tip-down"><div class="message">$45<div></div></div></div>' -->
</head>
<body ng-app="airBnB">
  <header><% include ./header %></header>


  <script type="text/javascript">
      var map;
      $(document).ready(function(){
        prettyPrint();

        //These lat and long values centers the map on the page wherever called.
        map = new GMaps({
          div: '#map',
          lat: 37.279518,
          lng: -121.867905
        });

        // map.addMarker({
        //   lat: 37.279518,
        //   lng: -121.867905,
        //   title: 'Lima',
        //   details: {
        //     database_id: 42,
        //     author: 'HPNeo'
        //   },
        //   click: function(e){
        //     if(console.log)
        //       console.log(e);
        //     alert('You clicked in this marker');
        //   }
        // });
        // map.addMarker({
        //   lat: -12.043333,
        //   lng: -77.028333,
        //   title: 'Marker with InfoWindow',
        //   infoWindow: {
        //     content: '<p>HTML Content</p>'
        //   }
        // });

        //currently for test purposes, multiple values are added. But when these values will be retrieved fro mthe database,
        //the map.drawOverlay function will be put within a for loop to show all the properties within 10 miles radius
        map.drawOverlay({
          lat: 37.279518,
          lng: -121.867905,
      content: '<div class="overlay">$<b>45</b><div class="overlay_arrow above"></div></div>'
        });
        map.drawOverlay({
          lat: 37.277354,
          lng: -121.861289,
      content: '<div class="overlay">$<b>75</b><div class="overlay_arrow above"></div></div>'
        });
        map.drawOverlay({
          lat: 37.277886,
          lng: -121.86595999999997,
      content: '<div class="overlay">$<b>200</b><span class="glyphicon glyphicon-flash" style="color:#FFD980;"></span><div class="overlay_arrow above"></div></div>'
        });
      });
    </script>

  <div id="header">
    <h1>
      <a href="../">gmaps.js</a>
    </h1>
    <h2>Google Maps API with less pain and more fun</h2>
  </div>
  <div>

  <div class="row pull-right">
    <div id="inLine" class="col-lg-12 ul_Two" ng-controller="searchBarController">
      <input type="text" class="form-control ul_Three header" placeholder="Where to?" ng-enter="selectCity" ng-click="selectCity" ng-autocomplete="city" details="details" options="options" ng-model="placeOne">
    </div>
  </div>
  <div class="row pull-right">
    <div id="inLine" class="col-lg-12 ul_Two" ng-controller="searchBarController">
      <input type="text" class="form-control ul_Three header" placeholder="Where to?" ng-enter="selectCity" ng-click="selectCity" ng-autocomplete="city" details="details" options="options" ng-model="placeTwo">
    </div>
  </div>





    <div class="container">
      <div class="col-lg-6">
        <div class="span11">
          <div class="popin">
            <div id="map" style="height:400px; width:500px;"></div>
          </div>
        </div>
      </div>

      <div class="col-lg-6 well">
        <div class="span6">
          <p>With GMaps.js you can add markers this way:</p>
          <pre class="prettyprint">
            map.addMarker({
              lat: -12.043333,
              lng: -77.028333,
              title: 'Lima',
              click: function(e) {
                alert('You clicked in this marker');
              }
            });
          </pre>
          <p><strong>latitude</strong> and <strong>longitude</strong> are required. You can also attach additional information with <code>details</code>, which will be passed to Event object (<code>e</code>) in the events previously defined.</p>
          <p><span class="label notice">Note</span>If you want to show an Info Window, you must add:</p>
          <pre class="prettyprint">infoWindow: {
    content: '&lt;p&gt;HTML Content&lt;/p&gt;'
  }</pre>
        </div>
      </div>
    </div>
  </div>
</body>
</html>